1. React State Management


React developers create and maintain state. They want state management to be simple, extendible, and atomic. React has moved in this direction by introducing hooks.


2. Functional Components 


دو نوع کامپوننت ها در React وجود داره Class Components و Functional Components.تفاوت بین این دو type خیلی واضح هست.Class components در واقع کلاس های ES6  هستند و Functional Components توابع هستند.یکی از مزایای functional components اینکه کدها رو برای خواندن و فهمیدن ساده تر میکنه.


۱- خوانایی فانکشنال کامپوننت ها بالاتر از کلاس کامپوننت هاست ( چون همون توابع ساده جاواسکریپتی هستند )
۲- تست کردن فانکشنال کامپوننت ها ساده تر از کلاس کامپوننت هاست.
۳- کدهای نهایی ترجمه شده ( و حتی سورس کدها )‌ با فانکشنال خیلی کوتاه تر میشه. (‌همونطور که تو مثال این مقاله دیدید)
۴- استفاده از فانکشنال کامپوننت ها به رعایت Best Practice ها کمک میکنه. یکی از مهمترین Best Practice های ری اکت جداسازی کامپوننت های نمایشی از container هاست. استفاده از فانکشنال کامپوننت ها به رعایت این موضوع کمک زیادی میکنه (وقتی کامپوننتی بنویسیم که داخلش setState نداشته باشیم )




3. Hook in react 


Hook قابلیت جدیدی است که از نسخه 16.8 به React اضافه شده است و امکان استفاده از state و دیگر قابلیت های React را بدون استفاده از ساختار class ممکن می سازد.
Hook ها توابعی ساده هستند که این امکان را به ما می دهند از قابلیت های state و lifecycle در react بدون استفاده از ساختار class در کامپوننت هایی که به صورت تابع هستند استفاده کنیم. Hook ها در داخل class ها غیر قابل استفاده می باشند (توصیه نمی شود که کامپوننت های موجود را دوباره بازنویسی کنید اما می توانید در کامپوننت های جدید از Hook ها استفاده کنید).
React تعدادی Hook (همانند useState) را به صورت پیش فرض تهیه کرده است، اما شما می توانید Hook های مورد نظر خود را نوشته و استفاده کنید.
* Hook ها باید در بالاترین سطح فراخوانی شوند. در حلقه های تکرار، شرط ها و توابع تودرتو نباید استفاده شوند.
* Hook ها تنها در کامپوننت هایی که به صورت تابع هستند قابل استفاده می باشند و در ساختار کلاس کاربرد ندارند (در داخل Hook هایی هم که خودتان ایجاد کرده اید نیز می توانید از Hook ها استفاده کنید که در ادامه توضیح داده خواهد شد).